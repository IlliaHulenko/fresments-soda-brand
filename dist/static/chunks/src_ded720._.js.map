{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/components/Bounded.tsx"],"sourcesContent":["import React, { ElementType, ReactNode } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n/* eslint-disable */\r\n\r\ninterface BoundedProps {\r\n  as?: ElementType;\r\n  className?: string; \r\n  children?: ReactNode; \r\n}\r\n\r\nexport const Bounded = ({\r\n  as: Component = \"section\",\r\n  className,\r\n  children,\r\n}: BoundedProps) => {\r\n  return (\r\n    <Component className={clsx(\"px-4 first:pt-10 md:px-6\", className)}>\r\n      <div className=\"mx-auto flex w-full max-w-7xl flex-col items-center\">\r\n        {children}\r\n      </div>\r\n    </Component>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AACA;;;AAUO,MAAM,UAAU,CAAC,EACtB,IAAI,YAAY,SAAS,EACzB,SAAS,EACT,QAAQ,EACK;IACb,qBACE,6LAAC;QAAU,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAAE,4BAA4B;kBACrD,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;KAZa"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/components/SodaCan.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useGLTF, useTexture } from \"@react-three/drei\";\r\nimport * as THREE from \"three\";\r\n\r\nuseGLTF.preload(\"/Soda-can.gltf\");\r\n\r\nconst flavorTextures = {\r\n  lemonLime: \"/labels/lemon-lime.png\",\r\n  grape: \"/labels/grape.png\",\r\n  blackCherry: \"/labels/cherry.png\",\r\n  strawberryLemonade: \"/labels/strawberry.png\",\r\n  watermelon: \"/labels/watermelon.png\",\r\n};\r\n\r\nconst metalMaterial = new THREE.MeshStandardMaterial({\r\n  roughness: 0.3,\r\n  metalness: 1,\r\n  color: \"#bbbbbb\",\r\n});\r\n\r\nexport type SodaCanProps = {\r\n  flavor?: keyof typeof flavorTextures;\r\n  scale?: number;\r\n};\r\n\r\nexport function SodaCan({\r\n  flavor = \"blackCherry\",\r\n  scale = 2,\r\n  ...props\r\n}: SodaCanProps) {\r\n  const { nodes } = useGLTF(\"/Soda-can.gltf\");\r\n\r\n  const labels = useTexture(flavorTextures);\r\n  \r\n  // Fixes upside down labels\r\n  labels.strawberryLemonade.flipY = false;\r\n  labels.blackCherry.flipY = false;\r\n  labels.watermelon.flipY = false;\r\n  labels.grape.flipY = false;\r\n  labels.lemonLime.flipY = false;\r\n\r\n  const label = labels[flavor];\r\n\r\n  return (\r\n    <group {...props} dispose={null} scale={scale} rotation={[0, -Math.PI, 0]}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={(nodes.cylinder as THREE.Mesh).geometry}\r\n        material={metalMaterial}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={(nodes.cylinder_1 as THREE.Mesh).geometry}\r\n      >\r\n        <meshStandardMaterial roughness={0.15} metalness={0.7} map={label} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={(nodes.Tab as THREE.Mesh).geometry}\r\n        material={metalMaterial}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;;;AAHA;;;AAKA,2JAAA,CAAA,UAAO,CAAC,OAAO,CAAC;AAEhB,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,aAAa;IACb,oBAAoB;IACpB,YAAY;AACd;AAEA,MAAM,gBAAgB,IAAI,qJAAM,oBAAoB,CAAC;IACnD,WAAW;IACX,WAAW;IACX,OAAO;AACT;AAOO,SAAS,QAAQ,EACtB,SAAS,aAAa,EACtB,QAAQ,CAAC,EACT,GAAG,OACU;;IACb,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE;IAE1B,MAAM,SAAS,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;IAE1B,2BAA2B;IAC3B,OAAO,kBAAkB,CAAC,KAAK,GAAG;IAClC,OAAO,WAAW,CAAC,KAAK,GAAG;IAC3B,OAAO,UAAU,CAAC,KAAK,GAAG;IAC1B,OAAO,KAAK,CAAC,KAAK,GAAG;IACrB,OAAO,SAAS,CAAC,KAAK,GAAG;IAEzB,MAAM,QAAQ,MAAM,CAAC,OAAO;IAE5B,qBACE,6LAAC;QAAO,GAAG,KAAK;QAAE,SAAS;QAAM,OAAO;QAAO,UAAU;YAAC;YAAG,CAAC,KAAK,EAAE;YAAE;SAAE;;0BACvE,6LAAC;gBACC,UAAU;gBACV,aAAa;gBACb,UAAU,AAAC,MAAM,QAAQ,CAAgB,QAAQ;gBACjD,UAAU;;;;;;0BAEZ,6LAAC;gBACC,UAAU;gBACV,aAAa;gBACb,UAAU,AAAC,MAAM,UAAU,CAAgB,QAAQ;0BAEnD,cAAA,6LAAC;oBAAqB,WAAW;oBAAM,WAAW;oBAAK,KAAK;;;;;;;;;;;0BAE9D,6LAAC;gBACC,UAAU;gBACV,aAAa;gBACb,UAAU,AAAC,MAAM,GAAG,CAAgB,QAAQ;gBAC5C,UAAU;;;;;;;;;;;;AAIlB;GAzCgB;;QAKI,2JAAA,CAAA,UAAO;QAEV,8JAAA,CAAA,aAAU;;;KAPX"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/components/FloatingCan.tsx"],"sourcesContent":["\"use client\";\r\nimport { forwardRef } from 'react';\r\nimport { Float } from '@react-three/drei'\r\n\r\nimport { SodaCan, SodaCanProps } from '@/components/SodaCan'\r\nimport { Group } from 'three';\r\n\r\ntype FloatingCanProps = {\r\n    flavor?: SodaCanProps['flavor'];\r\n    floatSpeed?: number;\r\n    rotationIntensity?: number;\r\n    floatIntentsity?: number;\r\n    floatingRange?: [number, number];\r\n    shildren?: React.ReactNode;\r\n};\r\n\r\nconst FloatingCan = forwardRef<Group, FloatingCanProps>(\r\n    ({\r\n        flavor = 'blackCherry',\r\n        floatSpeed = 1.5,\r\n        rotationIntensity = 1,\r\n        floatIntentsity = 1,\r\n        floatingRange = [-.1, .1],\r\n        shildren,\r\n        ...props\r\n    }, ref ) => {\r\n        return (\r\n            <group ref={ref} {...props}>\r\n                <Float\r\n                    speed={floatSpeed} // Animation speed, defaults to 1\r\n                    rotationIntensity={rotationIntensity} // XYZ rotation intensity, defaults to 1\r\n                    floatIntensity={floatIntentsity} // Up/down float intensity, works like a multiplier with floatingRange,defaults to 1\r\n                    floatingRange={floatingRange} // Range of y-axis values the object will float within, defaults to [-0.1,0.1]\r\n                >\r\n                    {shildren}\r\n                    <SodaCan flavor={flavor}/>                    \r\n                </Float>\r\n            </group>\r\n        );\r\n    });\r\n\r\nFloatingCan.displayName = 'FloatingCan';\r\n\r\nexport default FloatingCan"],"names":[],"mappings":";;;;AACA;AAGA;AAFA;AAFA;;;;;AAgBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,OACzB,CAAC,EACG,SAAS,aAAa,EACtB,aAAa,GAAG,EAChB,oBAAoB,CAAC,EACrB,kBAAkB,CAAC,EACnB,gBAAgB;IAAC,CAAC;IAAI;CAAG,EACzB,QAAQ,EACR,GAAG,OACN,EAAE;IACC,qBACI,6LAAC;QAAM,KAAK;QAAM,GAAG,KAAK;kBACtB,cAAA,6LAAC,4JAAA,CAAA,QAAK;YACF,OAAO;YACP,mBAAmB;YACnB,gBAAgB;YAChB,eAAe;;gBAEd;8BACD,6LAAC,gIAAA,CAAA,UAAO;oBAAC,QAAQ;;;;;;;;;;;;;;;;;AAIjC;;AAEJ,YAAY,WAAW,GAAG;uCAEX"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/hooks/useMediaQuery.ts"],"sourcesContent":["import { useCallback, useSyncExternalStore } from \"react\";\r\n\r\nexport function useMediaQuery(query: string, serverFallback: boolean): boolean {\r\n  const subscribe = useCallback(\r\n    (onStoreChange: () => void) => {\r\n      const mediaQueryList = matchMedia(query);\r\n      mediaQueryList.addEventListener(\"change\", onStoreChange);\r\n      return () => {\r\n        mediaQueryList.removeEventListener(\"change\", onStoreChange);\r\n      };\r\n    },\r\n    [query],\r\n  );\r\n\r\n  return useSyncExternalStore(\r\n    subscribe,\r\n    () => matchMedia(query).matches,\r\n    () => serverFallback,\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;;AAEO,SAAS,cAAc,KAAa,EAAE,cAAuB;;IAClE,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAC1B,CAAC;YACC,MAAM,iBAAiB,WAAW;YAClC,eAAe,gBAAgB,CAAC,UAAU;YAC1C;wDAAO;oBACL,eAAe,mBAAmB,CAAC,UAAU;gBAC/C;;QACF;+CACA;QAAC;KAAM;IAGT,OAAO,CAAA,GAAA,6JAAA,CAAA,uBAAoB,AAAD,EACxB;8CACA,IAAM,WAAW,OAAO,OAAO;;8CAC/B,IAAM;;AAEV;GAjBgB;;QAYP,6JAAA,CAAA,uBAAoB"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/slices/AlternatingText/Scene.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Environment } from \"@react-three/drei\";\r\nimport { useRef } from \"react\";\r\nimport { Group } from \"three\";\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { useGSAP } from \"@gsap/react\";\r\n\r\nimport FloatingCan from \"@/components/FloatingCan\";\r\nimport { useMediaQuery } from \"@/hooks/useMediaQuery\";\r\n\r\ngsap.registerPlugin(useGSAP, ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n    const canRef = useRef<Group>(null);\r\n    const isDesktop = useMediaQuery(\"(min-width: 768px)\", true);\r\n  \r\n    const bgColors = [\"#FFA6B5\", \"#E9CFF6\", \"#CBEF9A\"];\r\n  \r\n    useGSAP(\r\n      () => {\r\n        if (!canRef.current) return;\r\n  \r\n        const sections = gsap.utils.toArray(\".alternating-section\");\r\n  \r\n        const scrollTl = gsap.timeline({\r\n          scrollTrigger: {\r\n            trigger: \".alternating-text-view\",\r\n            endTrigger: \".alternating-text-container\",\r\n            pin: true,\r\n            start: \"top top\",\r\n            end: \"bottom bottom\",\r\n            scrub: true,\r\n          },\r\n        });\r\n  \r\n        sections.forEach((_, index) => {\r\n          if (!canRef.current) return;\r\n          if (index === 0) return;\r\n  \r\n          const isOdd = index % 2 !== 0;\r\n  \r\n          const xPosition = isDesktop ? (isOdd ? \"-1\" : \"1\") : 0;\r\n          const yRotation = isDesktop ? (isOdd ? \".4\" : \"-.4\") : 0;\r\n          scrollTl\r\n            .to(canRef.current.position, {\r\n              x: xPosition,\r\n              ease: \"circ.inOut\",\r\n              delay: 0.5,\r\n            })\r\n            .to(\r\n              canRef.current.rotation,\r\n              {\r\n                y: yRotation,\r\n                ease: \"back.inOut\",\r\n              },\r\n              \"<\",\r\n            )\r\n            .to(\".alternating-text-container\", {\r\n              backgroundColor: gsap.utils.wrap(bgColors, index),\r\n            });\r\n        });\r\n      },\r\n      { dependencies: [isDesktop] },\r\n    );\r\n  \r\n    return (\r\n      <group\r\n        ref={canRef}\r\n        position-x={isDesktop ? 1 : 0}\r\n        rotation-y={isDesktop ? -0.3 : 0}\r\n      >\r\n        <FloatingCan flavor=\"strawberryLemonade\" />\r\n        <Environment files={\"/hdr/lobby.hdr\"} environmentIntensity={1.5} />\r\n      </group>\r\n    );\r\n  }"],"names":[],"mappings":";;;;AAGA;AAIA;AAEA;AACA;AALA;AACA;AAJA;;;AAFA;;;;;;;;AAYA,gJAAA,CAAA,UAAI,CAAC,cAAc,CAAC,kJAAA,CAAA,UAAO,EAAE,wIAAA,CAAA,gBAAa;AAE3B,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAS;IAC7B,MAAM,YAAY,CAAA,GAAA,gIAAA,CAAA,gBAAa,AAAD,EAAE,sBAAsB;IAEtD,MAAM,WAAW;QAAC;QAAW;QAAW;KAAU;IAElD,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD;yBACJ;YACE,IAAI,CAAC,OAAO,OAAO,EAAE;YAErB,MAAM,WAAW,gJAAA,CAAA,UAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YAEpC,MAAM,WAAW,gJAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;gBAC7B,eAAe;oBACb,SAAS;oBACT,YAAY;oBACZ,KAAK;oBACL,OAAO;oBACP,KAAK;oBACL,OAAO;gBACT;YACF;YAEA,SAAS,OAAO;iCAAC,CAAC,GAAG;oBACnB,IAAI,CAAC,OAAO,OAAO,EAAE;oBACrB,IAAI,UAAU,GAAG;oBAEjB,MAAM,QAAQ,QAAQ,MAAM;oBAE5B,MAAM,YAAY,YAAa,QAAQ,OAAO,MAAO;oBACrD,MAAM,YAAY,YAAa,QAAQ,OAAO,QAAS;oBACvD,SACG,EAAE,CAAC,OAAO,OAAO,CAAC,QAAQ,EAAE;wBAC3B,GAAG;wBACH,MAAM;wBACN,OAAO;oBACT,GACC,EAAE,CACD,OAAO,OAAO,CAAC,QAAQ,EACvB;wBACE,GAAG;wBACH,MAAM;oBACR,GACA,KAED,EAAE,CAAC,+BAA+B;wBACjC,iBAAiB,gJAAA,CAAA,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU;oBAC7C;gBACJ;;QACF;wBACA;QAAE,cAAc;YAAC;SAAU;IAAC;IAG9B,qBACE,6LAAC;QACC,KAAK;QACL,cAAY,YAAY,IAAI;QAC5B,cAAY,YAAY,CAAC,MAAM;;0BAE/B,6LAAC,oIAAA,CAAA,UAAW;gBAAC,QAAO;;;;;;0BACpB,6LAAC,kKAAA,CAAA,cAAW;gBAAC,OAAO;gBAAkB,sBAAsB;;;;;;;;;;;;AAGlE;GA/DsB;;QAEF,gIAAA,CAAA,gBAAa;QAI/B,kJAAA,CAAA,UAAO;;;KANa"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Programing/Projects/NextJS/3D_Refrescos_brand/refrescos-brand/src/slices/AlternatingText/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC } from \"react\";\nimport { asText, Content } from \"@prismicio/client\";\nimport { PrismicRichText, PrismicText, SliceComponentProps } from \"@prismicio/react\";\nimport { Bounded } from \"@/components/Bounded\";\nimport { View } from \"@react-three/drei\";\nimport Scene from \"./Scene\";\nimport clsx from \"clsx\";\n\n/**\n * Props for `AlternatingText`.\n */\nexport type AlternatingTextProps =\n  SliceComponentProps<Content.AlternatingTextSlice>;\n\n/**\n * Component for \"AlternatingText\" Slices.\n */\nconst AlternatingText: FC<AlternatingTextProps> = ({ slice }) => {\n  return (\n    <Bounded\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n      className=\"alternating-text-container relative bg-yellow-300 text-sky-950\"\n    >\n      <div>\n        <div className=\"relative z-[100] grid\">\n          <View className=\"alternating-text-view absolute left-0 top-0 h-screen w-full\">\n            <Scene />\n          </View>\n\n          {slice.primary.text_group.map((item, index) => (\n            <div\n              key={asText(item.heading)}\n              className=\"alternating-section grid h-screen place-items-center gap-x-12 md:grid-cols-2\"\n            >\n              <div\n                className={clsx(\n                  index % 2 === 0 ? \"col-start-1\" : \"md:col-start-2\",\n\n                  \"rounded-lg p-4 backdrop-blur-lg max-md:bg-white/30\",\n                )}\n              >\n                <h2 className=\"text-balance text-6xl font-bold\">\n                  <PrismicText field={item.heading} />\n                </h2>\n                <div className=\"mt-4 text-xl\">\n                  <PrismicRichText field={item.body} />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Bounded>\n  );\n};\n\nexport default AlternatingText;\n"],"names":[],"mappings":";;;;AAKA;AAEA;AACA;AAFA;AAFA;AAAA;AADA;AAHA;;;;;;;;AAgBA;;CAEC,GACD,MAAM,kBAA4C,CAAC,EAAE,KAAK,EAAE;IAC1D,qBACE,6LAAC,gIAAA,CAAA,UAAO;QACN,mBAAiB,MAAM,UAAU;QACjC,wBAAsB,MAAM,SAAS;QACrC,WAAU;kBAEV,cAAA,6LAAC;sBACC,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,0JAAA,CAAA,OAAI;wBAAC,WAAU;kCACd,cAAA,6LAAC,6IAAA,CAAA,UAAK;;;;;;;;;;oBAGP,MAAM,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,sBACnC,6LAAC;4BAEC,WAAU;sCAEV,cAAA,6LAAC;gCACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,QAAQ,MAAM,IAAI,gBAAgB,kBAElC;;kDAGF,6LAAC;wCAAG,WAAU;kDACZ,cAAA,6LAAC,8JAAA,CAAA,cAAW;4CAAC,OAAO,KAAK,OAAO;;;;;;;;;;;kDAElC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,kKAAA,CAAA,kBAAe;4CAAC,OAAO,KAAK,IAAI;;;;;;;;;;;;;;;;;2BAdhC,CAAA,GAAA,qKAAA,CAAA,SAAM,AAAD,EAAE,KAAK,OAAO;;;;;;;;;;;;;;;;;;;;;AAuBtC;KAtCM;uCAwCS"}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}